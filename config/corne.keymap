/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

shifted: macro_shifted_kp {
#binding-cells = <1>;
label = "MACRO_SHIFTED_KP";
compatible = "zmk,behavior-macro-one-param";
bindings =
        <&macro_press &kp LSHFT>,
        <&macro_param_1to1 &macro_tap &kp MACRO_PLACEHOLDER>,
        <&macro_release &kp LSHFT>;
};

as_ht: autoshift_hold_tap {
    compatible = "zmk,behavior-hold-tap";
    label = "AUTOSHIFT_HOLD_TAP";
    #binding-cells = <2>;
    tapping-term-ms = <135>;
    flavor = "tap-preferred";
    bindings = <&shifted>, <&kp>;
};

as: autoshift {
    compatible = "zmk,behavior-macro-one-param";
    #binding-cells = <1>;
    label = "AUTOSHIFT_KP";
    bindings =
      <&macro_press>,
      <&macro_param_1to1>,
      <&macro_param_1to2>,
      <&as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
      <&macro_pause_for_release>,
      <&macro_release>,
      <&macro_param_1to1>,
      <&macro_param_1to2>,
      <&as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
};

/ {
        combos {
                compatible = "zmk,combos";
                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <13 14>;
                        bindings = <&kp TAB>;
                };
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <15 16>;
                        bindings = <&kp ESC>;
                };
                combo_bspace {
                        timeout-ms = <50>;
                        key-positions = <19 20>;
                        bindings = <&kp BSPC>;
                };
                combo_semicolon {
                        timeout-ms = <50>;
                        key-positions = <20 21>;
                        bindings = <&kp SEMICOLON>;
                };
                combo_minus {
                        timeout-ms = <50>;
                        key-positions = <21 22>;
                        bindings = <&kp MINUS>;
                };
                combo_shift {
                        timeout-ms = <50>;
                        key-positions = <38 39>;
                        bindings = <&kp LSHIFT>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | RET |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
&none &as Q &as W &as E &as R &as T   &as Y &as U  &as I     &as O   &as P    &none 
&none &as A &as S &as D &as F &as G   &as H &as J  &as K     &as L   &as RET  &none 
&none &as Z &as X &as C &as V &as B   &as N &as M  &as COMMA &as DOT &as FSLH &none 
              &lt 5 COLON &lt 1 SPACE &kp LGUI   &lt 4 DEL &mo 2 &lt 3 SQT
                        >;
                };
                lower_layer {

// -----------------------------------------------------------------
// |     |     |     |     |     |   |     |     |     |     |     | 
// | LGUI| BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// |     |     |     |     |     |   |     |     |     |     |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&none   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans   &kp C_AC_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO &none
&none   &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT   &trans   &kp LEFT      &kp DOWN    &kp UP     &kp RIGHT &trans     &none
&none   &bt BT_CLR   &trans       &trans       &trans       &trans   &kp INS       &kp HOME    &kp PG_UP  &kp PG_DN &kp END    &none
                            &trans &trans &kp SPACE   &trans &trans &trans
                        >;
                };
                raise_layer {

// -----------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&none   &kp LBKT  &kp N7 &kp N8 &kp N9 &kp RBKT   &trans &trans     &trans    &trans   &trans   &none 
&none   &kp SEMI  &kp N4 &kp N5 &kp N6 &kp EQUAL  &trans &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI &none 
&none   &kp GRAVE &kp N1 &kp N2 &kp N3 &kp NUBS   &trans &trans     &trans    &trans   &trans   &none 
                     &kp DOT &kp N0 &kp MINUS   &kp RET &trans &kp RALT
                        >;
                };
                fn_layer {

// -----------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&none   &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN   &trans &trans     &trans    &trans   &trans   &none 
&none   &kp F11 &kp F4 &kp F5 &kp F6 &trans      &trans &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI &none 
&none   &kp F10 &kp F1 &kp F2 &kp F3 &trans      &trans &trans     &trans    &trans   &trans   &none 
                     &trans &trans &trans    &trans &trans &trans
                        >;
                };
                sym_layer {

// -----------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&none   &kp LBRC   &kp AMPS   &kp STAR  &kp LPAR  &kp RBRC   &trans &trans     &trans    &trans   &trans   &none 
&none   &kp COLON  &kp DOLLAR &kp PRCNT &kp CARET &kp PLUS   &trans &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI &none 
&none   &kp TILDE  &kp EXCL   &kp AT    &kp HASH  &kp PIPE   &trans &trans     &trans    &trans   &trans   &none 
                     &kp LPAR &kp RPAR &kp UNDERSCORE   &trans &trans &trans
                        >;
                };
                mouse_layer {

// -----------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&none   &trans     &trans     &trans    &trans     &trans     &kp C_AC_REDO  &kp K_PASTE    &kp K_COPY   &kp K_CUT       &kp K_UNDO &none
&none   &kp LGUI   &kp LALT   &kp LCTRL &kp LSHIFT &trans     &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &trans     &none 
&none   &trans     &trans     &trans    &trans     &kp PIPE   &trans         &trans         &trans       &trans          &trans     &none 
                             &trans &trans &trans   &mkp LCLK &mkp MCLK &mkp RCLK
                        >;
                };
        };
};
