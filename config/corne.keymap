/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        combos {
                combo_tab {
                        compatible = "zmk,combos";
                        key-positions = <10 11>;
                        bindings = <&kp TAB>;
                };
                combo_esc {
                        compatible = "zmk,combos";
                        key-positions = <12 13>;
                        bindings = <&kp ESC>;
                };
                combo_bspace {
                        compatible = "zmk,combos";
                        key-positions = <16 17>;
                        bindings = <&kp BSPC>;
                };
                combo_semicolon {
                        compatible = "zmk,combos";
                        key-positions = <17 18>;
                        bindings = <&kp SEMICOLON>;
                };
                combo_minus {
                        compatible = "zmk,combos";
                        key-positions = <18 19>;
                        bindings = <&kp MINUS>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | RET |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
&none &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &none 
&none &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp RET  &none 
&none &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none 
              &kp LSHIFT &kp LGUI &lt 1 SPACE   &mo 2 &kp DEL &kp RALT
                        >;
                };
                lower_layer {

// -----------------------------------------------------------------
// |     |     |     |     |     |   |     |     |     |     |     | 
// | LGUI| BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// |     |     |     |     |     |   |     |     |     |     |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&none   &trans   &trans   &trans    &trans     &trans   &kp C_AC_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO &none
&none   &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &trans   &trans        &kp LEFT    &kp DOWN   &kp UP    &kp RIGHT  &none 
&none   &trans   &trans   &trans    &trans     &trans   &kp INS       &kp HOME    &kp PG_UP  &kp PG_DN &kp END    &none
                            &kp LGUI &trans     &kp SPACE &trans &trans &trans
                        >;
                };
                raise_layer {

// -----------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&none   &kp LBKT  &kp N7 &kp N8 &kp N9 &kp RBKT   &trans &trans     &trans    &trans   &trans   &none 
&none   &kp SEMI  &kp N4 &kp N5 &kp N6 &kp EQUAL  &trans &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI &none 
&none   &kp GRAVE &kp N1 &kp N2 &kp N3 &kp NUBS   &trans &trans     &trans    &trans   &trans   &none 
                     &kp DOT &kp N0 &kp MINUS   &kp RET &trans &kp RALT
                        >;
                };
        };
};
